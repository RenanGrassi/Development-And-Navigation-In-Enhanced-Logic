(Start symbol)
program = ("bomdia!" | "boatarde!"){statement}


(statement)
statement = declarationVariable | assignment | ifStatement | forStatement | whileStatement | switchStatement | printStatement |
            inputStatement | callfunction | fileopen | fileclose | malloc | free | kw_break


(declarationVariable)
declarationVariable = type identifier ";" 


(assignment)
assignment = type identifier "=" expression ";" 


(ifstatement)
ifStatement = kw_if "("condition")" "{" {statement} "}"
              [kw_elif "("condition")" "{" {statement} "}"]
              [kw_else "{" {statement} "}"]


(whileStatement)
whileStatement = kw_while "("condition")" "{" {statement} "}"


(forStatement)
forStatement = kw_for "("assignment ";" condition ";" increment")" "{" {statement} "}"


(switchStatement)
switchStatement = kw_switch "("identifier")" "{" {case} {default} "}"
case = "chwazi" digit{digit} ":" {statement} ";" kw_break ";"
default = "marcos" ":" {statement} ";"


(printStatement)
printStatement = print"("{printtext}")" ";"
printStatement = println"("{printtext}"\n" ")" ";"
printtext = """letter{letter}"""{identifier","}
print = "veeeeja"
println = "vejaBem!"


(inputStatement)
inputStatement = "diga!" "("{input}")" ";"
input = identifier[","]

(enum)
enum = kw_enum "{" enum_field {"," enum_field} "}"";"
enum_field = identifier

(typedef)
typedef = kw_typedef identifier identifier ";"


(struct)
struct = kw_struct "{"{assignment}"}" ";"


(createfunction)
createfunction = "masNaoEObvio?" "{"statement"}" kw_return ";"


(callfunction)
callfunction = "masIssoEObvio!""("[identifier]")" ";"


(fileopen)
fileopen = FILE "=" "switch" "("identifier","openingmode")" ";"
openingmode = "r" | "rb" | "w" | "wb" | "a" | "ab" | "r+" | "rb+" | "w+" | "wb+" | "a+" | "ab+"


(fileclose)
fileclose = "wii" "("FILE")" ";"


(malloc)
malloc = identifier "=" "naoEMagico?" "("kw_sizeof"("identifier")"")" ";"


(free)
free = "reuniao14h" "("identifier")" ";"


(identifier)
identifier = ( letter | '_' ) { letter | digit | '_' }


(literal tokens)
letter = (letterup | letterdown)
letterup = "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | U" |
            "V" | "W" | "X" | "Y" | "Z"
letterdown = "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" |
             "u" | "v" | "w" | "x" | "y" | "z"
integer = dec-digit | hex-digit | oct-digit | bin-digit
rational = [ intenger ] '.' integer
bin-integer	= ( "0b" | "0B" ) bin-digit { bin-digit }
oct-integer	= ( "0o" | "0O" ) oct-digt { oct-digit }
hex-integer	= ( "0x" | "0X" ) hex-digit { hex-digit }
dec-integer	= digit { digit }
hex-digit = digit | 'a' | 'b' | 'c' | 'd' | 'e' | 'f'
			 | 'A' | 'B' | 'C' | 'D' | 'E' | 'F'
digit = oct-digit | '8' | '9'
oct-digit = bin-digit | '2' | '3' | '4' | '5' | '6' | '7'
bin-digit = '0' | '1'
comment	= "// " ? any-char ? "\n"
		| "/*" ? any-char "*/"
any-char = letter | digit | symbols
symbols = "'" | """ | "|" | "\" | "!" | "@" | "#" | "$" | "%" | "¨" | "&" | "*" | "(" | ")" | "-" | "_" | "§" | "´" | "`" |
          "[" | "]" | "{" | "}" | "ª" | "^" | "~" | "º" | "," | "<" | "." | ">" | ";" | ":" | "/" | "?" | "°" | "-" | "+"


(logic and relational tokens)
condition = (identifier | digit) (logicoperator | relationaloperators) (identifier | digit)
logicoperator = "|" | "&&" | "!"
relationaloperators = "<" | ">" | "==" | ">=" | "<=" | "!="
increment = identifier increase
increase = "++" | "--"

(keywords)
kw_break = "momentoOportuno"
type = kw_int | kw_float | kw_double | kw_char | kw_string | kw_boolean | kw_FILE
kw_int = "marioKart"
kw_float = "donkey" 
kw_double = "kong"
kw_char = "mario"
kw_string = "superMario" 
kw_boolean = "zelda"
kw_FILE = "nintendo"
kw_if = "fezALista?"
kw_elif = "naoFez?"
kw_else = "nao?"
kw_while = "eAGreve?"
kw_for = "adiaarOTP"
kw_switch = "temosUmImpasse!"
kw_typedef = "penseBem"
kw_struct = "8886"
kw_return = "chamada!"
kw_sizeof = "sizeof"
kw_enum = "eOVisto?"